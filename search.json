[{"path":"https://rjdverse.github.io/rjd3highfreq/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jean Palate. Author, maintainer. Tanguy Barthelemy. Contributor, artist.","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Palate J (2024). rjd3highfreq: Seasonal Adjustment High Frequency Data 'JDemetra+ 3.x'. R package version 2.1.1, https://rjdverse.github.io/rjd3highfreq/, https://github.com/rjdverse/rjd3highfreq.","code":"@Manual{,   title = {rjd3highfreq: Seasonal Adjustment of High Frequency Data with 'JDemetra+ 3.x'},   author = {Jean Palate},   year = {2024},   note = {R package version 2.1.1, https://rjdverse.github.io/rjd3highfreq/},   url = {https://github.com/rjdverse/rjd3highfreq}, }"},{"path":"https://rjdverse.github.io/rjd3highfreq/index.html","id":"rjd3highfreq-","dir":"","previous_headings":"","what":"Seasonal Adjustment of High Frequency Data with JDemetra+ 3.x","title":"Seasonal Adjustment of High Frequency Data with JDemetra+ 3.x","text":"rjd3highfreq provides functions seasonal adjustment high-frequency data displaying multiple, non integer periodicities. Pre-adjustment extended airline model Arima Model Based decomposition.","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Seasonal Adjustment of High Frequency Data with JDemetra+ 3.x","text":"Running rjd3 packages requires Java 17 higher. set configuration R explained ","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/index.html","id":"latest-release","dir":"","previous_headings":"Installation","what":"Latest release","title":"Seasonal Adjustment of High Frequency Data with JDemetra+ 3.x","text":"get current stable version (latest release): GitHub: r-universe:","code":"# install.packages(\"remotes\") remotes::install_github(\"rjdverse/rjd3toolkit@*release\") remotes::install_github(\"rjdverse/rjd3sts@*release\") remotes::install_github(\"rjdverse/rjd3highfreq@*release\") install.packages(\"rjd3highfreq\", repos = c(\"https://rjdverse.r-universe.dev\", \"https://cloud.r-project.org\"))"},{"path":"https://rjdverse.github.io/rjd3highfreq/index.html","id":"development-version","dir":"","previous_headings":"Installation","what":"Development version","title":"Seasonal Adjustment of High Frequency Data with JDemetra+ 3.x","text":"can install development version rjd3highfreq GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"rjdverse/rjd3highfreq\")"},{"path":"https://rjdverse.github.io/rjd3highfreq/index.html","id":"demonstration-with-the-daily-french-births","dir":"","previous_headings":"","what":"Demonstration with the daily french births","title":"Seasonal Adjustment of High Frequency Data with JDemetra+ 3.x","text":"Plot raw series:  Preparation calendar package rjd3toolkit: Creation calendar regressor matrix package rjd3toolkit: Preprocessing function fractionalAirlineEstimation:   Decomposition AMB (Arima Model Based) algorithm: Plot:     Perform Arima Model Based (AMB) decomposition several periodcities : Plot comparison two AMB methods annual periodicity:   package rjd3x11plus, can perform X-11 like decomposition (non integer) periodicity.","code":"library(\"rjd3highfreq\") ## Import of data df_daily <- read.csv2(\"https://raw.githubusercontent.com/TanguyBarthelemy/Tsace_RJD_Webinar_Dec22/b5fcf6b14ae47393554950547ef4788a0068a0f6/Data/TS_daily_births_franceM_1968_2020.csv\")  # Creation of log variables to multiplicative model df_daily$log_births <- log(df_daily$births) df_daily$date <- as.Date(df_daily$date) # French calendar frenchCalendar <- rjd3toolkit::national_calendar(days = list(   rjd3toolkit::fixed_day(7, 14), # Bastille Day   rjd3toolkit::fixed_day(5, 8, validity = list(start = \"1982-05-08\")), # End of 2nd WW   rjd3toolkit::special_day('NEWYEAR'),   rjd3toolkit::special_day('MAYDAY'), # 1st may   rjd3toolkit::special_day('EASTERMONDAY'),   rjd3toolkit::special_day('ASCENSION'),   rjd3toolkit::special_day('WHITMONDAY'),   rjd3toolkit::special_day('ASSUMPTION'),   rjd3toolkit::special_day('ALLSAINTSDAY'), # Toussaint   rjd3toolkit::special_day('ARMISTICE'), # End of 1st WW   rjd3toolkit::special_day('CHRISTMAS')) ) # Calendar regressor matrix cal_reg <- rjd3toolkit::holidays(     calendar = frenchCalendar,     start = \"1968-01-01\", length = nrow(df_daily),     type = \"All\", nonworking = 7L)  colnames(cal_reg) <- c(\"14th_july\", \"8th_may\", \"1st_jan\", \"1st_may\",                        \"east_mon\", \"asc\", \"pen_mon\",                        \"15th_aug\", \"1st_nov\", \"11th_nov\", \"Xmas\") pre_pro <- fractionalAirlineEstimation(     y = df_daily$births,     x = cal_reg,     periods = 7, # weekly frequency     outliers = c(\"ao\", \"wo\"), log = TRUE, y_time = df_daily$date)  print(pre_pro) #> Number of observations: 19359 #> Start: 1968-01-01  #> End: 2020-12-31  #>  #> Estimate MA parameters: #>       MA_parameter      Coef     Coef_SE    Tstat #>           Theta(1) 0.7620698 0.005571472 136.7807 #>  Theta(period = 7) 0.9731793 0.001413477 688.5002 #>  #> Number of calendar regressors: 11 , Number of outliers : 7 #>  #> TD regressors coefficients: #>   Variable    Coef Coef_SE    Tstat #>  14th_july -0.1226  0.0047 -26.0615 #>    8th_may -0.1419  0.0054 -26.3419 #>    1st_jan -0.2223  0.0047 -47.3511 #>    1st_may -0.1225  0.0047 -26.2643 #>   east_mon -0.1891  0.0046 -40.7635 #>        asc -0.1726  0.0046 -37.1949 #>    pen_mon -0.1900  0.0046 -40.9429 #>   15th_aug -0.1181  0.0047 -25.3461 #>    1st_nov -0.1503  0.0046 -32.5662 #>   11th_nov -0.1238  0.0046 -26.8142 #>       Xmas -0.2310  0.0046 -49.7435 #>  #> Outliers coefficients: #>       Variable    Coef Coef_SE   Tstat #>  WO.1999-12-31 -0.1762  0.0226 -7.7916 #>  AO.1995-08-15 -0.2224  0.0340 -6.5503 #>  WO.1999-12-24 -0.1447  0.0226 -6.3981 #>  AO.2012-01-01  0.2098  0.0340  6.1786 #>  AO.1998-07-14 -0.2101  0.0340 -6.1880 #>  AO.1997-07-14 -0.2092  0.0340 -6.1602 #>  AO.1995-05-01 -0.2042  0.0340 -6.0146 #>  #> Sum of square residuals: 25.17 on 19330 degrees of freedom #> Log likelihood = 3.682e+04,  #>  aic = -7.361e+04,  #>  aicc = -7.361e+04,  #>  bic(corrected for length) = -6.635 #> Hannan–Quinn information criterion = -7.355e+04 plot(pre_pro, main = \"French births\") plot(x = pre_pro,      from = as.Date(\"2000-01-01\"), to = as.Date(\"2000-12-31\"),      main = \"French births in 2000\") # Decomposition with weekly pattern amb.dow <- rjd3highfreq::fractionalAirlineDecomposition(     y = pre_pro$model$linearized, # linearized series from preprocessing     period = 7,     log = TRUE, y_time = df_daily$date)  # Extract day-of-year pattern from day-of-week-adjusted linearised data amb.doy <- rjd3highfreq::fractionalAirlineDecomposition(     y = amb.dow$decomposition$sa, # DOW-adjusted linearised data     period = 365.2425, # day of year pattern     log = TRUE, y_time = df_daily$date) plot(amb.dow, main = \"Weekly pattern\") plot(amb.dow, main = \"Weekly pattern - January 2018\",      from = as.Date(\"2018-01-01\"),      to = as.Date(\"2018-01-31\")) plot(amb.doy, main = \"Yearly pattern\") plot(amb.doy, main = \"Weekly pattern - 2000 - 2002\",      from = as.Date(\"2000-01-01\"),      to = as.Date(\"2002-12-31\")) amb.multi <- rjd3highfreq::multiAirlineDecomposition(   y = pre_pro$model$linearized, # input time series   periods = c(7, 365.2425), # 2 frequency   log = TRUE, y_time = df_daily$date) plot(amb.multi) plot(amb.multi, main = \"2012\",      from = as.Date(\"2012-01-01\"),      to = as.Date(\"2012-12-31\"))"},{"path":"https://rjdverse.github.io/rjd3highfreq/index.html","id":"package-maintenance-and-contributing","dir":"","previous_headings":"","what":"Package Maintenance and contributing","title":"Seasonal Adjustment of High Frequency Data with JDemetra+ 3.x","text":"contribution welcome done pull requests /issues. pull requests include updated tests updated documentation. functionality changed, docstrings added updated.","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/index.html","id":"licensing","dir":"","previous_headings":"","what":"Licensing","title":"Seasonal Adjustment of High Frequency Data with JDemetra+ 3.x","text":"code project licensed European Union Public Licence (EUPL).","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-arima_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — .arima_extract","title":"Title — .arima_extract","text":"Title","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-arima_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — .arima_extract","text":"","code":".arima_extract(jrslt, path)"},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-arima_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — .arima_extract","text":"path","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-extended_airline_loglevel.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — .extended_airline_loglevel","title":"Title — .extended_airline_loglevel","text":"Title","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-extended_airline_loglevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — .extended_airline_loglevel","text":"","code":".extended_airline_loglevel(jregarima, jspec, precision = 1e-05)"},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-extended_airline_loglevel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — .extended_airline_loglevel","text":"precision","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-extended_airline_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — .extended_airline_outliers","title":"Title — .extended_airline_outliers","text":"Title","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-extended_airline_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — .extended_airline_outliers","text":"","code":".extended_airline_outliers(   jregarima,   jspec,   types = c(\"ao\"),   start = 0,   end = 0,   critical_value = 0,   max_outliers = 30,   max_round = 30 )"},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-extended_airline_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — .extended_airline_outliers","text":"max_round","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-extendedairline_estimation.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — .extendedairline_estimation","title":"Title — .extendedairline_estimation","text":"Title","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-extendedairline_estimation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — .extendedairline_estimation","text":"","code":".extendedairline_estimation(   jregarima,   jspec,   eps = 1e-09,   exactHessian = FALSE )"},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-extendedairline_estimation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — .extendedairline_estimation","text":"exactHessian","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-extendedairline_regarima.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a java RegArima models based on an extended airline spec — .extendedairline_regarima","title":"Creates a java RegArima models based on an extended airline spec — .extendedairline_regarima","text":"Creates java RegArima models based extended airline spec","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-extendedairline_regarima.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a java RegArima models based on an extended airline spec — .extendedairline_regarima","text":"","code":".extendedairline_regarima(y, jspec, mean = FALSE, X = NULL)"},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-extendedairline_regarima.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a java RegArima models based on an extended airline spec — .extendedairline_regarima","text":"y y jspec Java spec mean Mean correction (avoided) X Regression variables","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-extendedairline_regarima.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a java RegArima models based on an extended airline spec — .extendedairline_regarima","text":"Java RegArima model","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-extendedairline_regarima.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a java RegArima models based on an extended airline spec — .extendedairline_regarima","text":"","code":"jspec<-.extendedairline_spec(c(12)) .extendedairline_regarima(rjd3toolkit::ABS$X0.2.09.10.M, jspec) #> [1] \"Java-Object{jdplus.toolkit.base.core.regarima.RegArimaModel@47c62251}\""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-extendedairline_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal routine to create an ExtendedAirlineSpec — .extendedairline_spec","title":"Internal routine to create an ExtendedAirlineSpec — .extendedairline_spec","text":"Internal routine create ExtendedAirlineSpec","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-extendedairline_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal routine to create an ExtendedAirlineSpec — .extendedairline_spec","text":"","code":".extendedairline_spec(   periodicities,   differencing = -1,   ar = FALSE,   toint = FALSE )"},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-extendedairline_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal routine to create an ExtendedAirlineSpec — .extendedairline_spec","text":"periodicities Periodicities differencing Differnecing order. -1 automatic computation ar Use AR regular stationary polynomial instead MA polynomial toint Round periodicties integers","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-extendedairline_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal routine to create an ExtendedAirlineSpec — .extendedairline_spec","text":"Java ExtendedAirlineSpec object","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-extendedairline_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internal routine to create an ExtendedAirlineSpec — .extendedairline_spec","text":"","code":".extendedairline_spec(c(7, 365.25)) #> [1] \"Java-Object{ExtendedAirlineSpec(mean=false, periodicities=[7.0, 365.25], differencingOrder=3, phi=null, theta=..., stheta=[..., ...], adjustToInt=false)}\""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-plot_jd.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom Plot Function on JD+ template — .plot_jd","title":"Custom Plot Function on JD+ template — .plot_jd","text":"function creates customized plot template JD+ GUI color forms.","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-plot_jd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom Plot Function on JD+ template — .plot_jd","text":"","code":".plot_jd(x, y, col, legend_txt = NULL, ...)"},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-plot_jd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom Plot Function on JD+ template — .plot_jd","text":"x Numeric vector, x-axis values. y List numeric vectors, y-axis values different series. col Vector colors different series. legend_txt Character vector legend labels different series. ... Additional graphical parameters.","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-plot_jd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom Plot Function on JD+ template — .plot_jd","text":"`NULL` (invisible).","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-ucm_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — .ucm_extract","title":"Title — .ucm_extract","text":"Title","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-ucm_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — .ucm_extract","text":"","code":".ucm_extract(jrslt, cmp)"},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/dot-ucm_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — .ucm_extract","text":"cmp","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/fractionalAirlineDecomposition.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform an Arima Model Based (AMB) decomposition — fractionalAirlineDecomposition","title":"Perform an Arima Model Based (AMB) decomposition — fractionalAirlineDecomposition","text":"Perform Arima Model Based (AMB) decomposition","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/fractionalAirlineDecomposition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform an Arima Model Based (AMB) decomposition — fractionalAirlineDecomposition","text":"","code":"fractionalAirlineDecomposition(   y,   period,   sn = FALSE,   stde = FALSE,   nbcasts = 0,   nfcasts = 0,   log = FALSE,   y_time = NULL )"},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/fractionalAirlineDecomposition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform an Arima Model Based (AMB) decomposition — fractionalAirlineDecomposition","text":"y input time series. period period seasonal component, positive real number. sn decomposition signal noise (2 components ). signal seasonally adjusted series noise seasonal component. stde Boolean: TRUE: compute standard deviations components. cases (memory limits), currently possible compute nbcasts number backcasts. nfcasts number forecasts. y_time vector times `y` indexed adjust Boolean: TRUE: actual fractional airline model used, FALSE: period rounded nearest integer.","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/fractionalAirlineDecomposition_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — fractionalAirlineDecomposition_raw","title":"Title — fractionalAirlineDecomposition_raw","text":"Title","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/fractionalAirlineDecomposition_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — fractionalAirlineDecomposition_raw","text":"","code":"fractionalAirlineDecomposition_raw(   y,   period,   sn = FALSE,   stde = FALSE,   nbcasts = 0,   nfcasts = 0 )"},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/fractionalAirlineDecomposition_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — fractionalAirlineDecomposition_raw","text":"nfcasts","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/fractionalAirlineDecomposition_ssf.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — fractionalAirlineDecomposition_ssf","title":"Title — fractionalAirlineDecomposition_ssf","text":"Title","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/fractionalAirlineDecomposition_ssf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — fractionalAirlineDecomposition_ssf","text":"","code":"fractionalAirlineDecomposition_ssf(jdecomp)"},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/fractionalAirlineDecomposition_ssf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — fractionalAirlineDecomposition_ssf","text":"jdecomp","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/fractionalAirlineEstimation.html","id":null,"dir":"Reference","previous_headings":"","what":"Linearize the series with a fractional airline model — fractionalAirlineEstimation","title":"Linearize the series with a fractional airline model — fractionalAirlineEstimation","text":"Linearize series fractional airline model","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/fractionalAirlineEstimation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linearize the series with a fractional airline model — fractionalAirlineEstimation","text":"","code":"fractionalAirlineEstimation(   y,   periods,   x = NULL,   ndiff = 2,   ar = FALSE,   outliers = NULL,   criticalValue = 6,   precision = 1e-12,   approximateHessian = FALSE,   nfcasts = 0,   log = FALSE,   y_time = NULL )"},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/fractionalAirlineEstimation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linearize the series with a fractional airline model — fractionalAirlineEstimation","text":"y input time series. periods vector periods values seasonal component, positive real numbers. x matrix user-defined regression variables (see rjd3toolkit building calendar regressors). outliers type outliers sub vector c(\"AO\",\"LS\",\"WO\") criticalValue Critical value automatic outlier detection precision Precision likelihood approximateHessian Compute approximate hessian (based optimizing procedure) nfcasts Number forecasts log logical y_time vector times `y` indexed","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/jd2r_fractionalAirlineDecomposition.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — jd2r_fractionalAirlineDecomposition","title":"Title — jd2r_fractionalAirlineDecomposition","text":"Title","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/jd2r_fractionalAirlineDecomposition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — jd2r_fractionalAirlineDecomposition","text":"","code":"jd2r_fractionalAirlineDecomposition(   jrslt,   sn = FALSE,   stde = FALSE,   period,   log = FALSE,   y_time = NULL )"},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/jd2r_fractionalAirlineDecomposition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — jd2r_fractionalAirlineDecomposition","text":"y_time vector times time series indexed","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/jd2r_multiAirlineDecomposition.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — jd2r_multiAirlineDecomposition","title":"Title — jd2r_multiAirlineDecomposition","text":"Title","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/jd2r_multiAirlineDecomposition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — jd2r_multiAirlineDecomposition","text":"","code":"jd2r_multiAirlineDecomposition(   jrslt,   stde = FALSE,   periods,   log = FALSE,   y_time = NULL )"},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/jd2r_multiAirlineDecomposition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — jd2r_multiAirlineDecomposition","text":"y_time vector times time series indexed","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/multiAirlineDecomposition.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform an Arima Model Based (AMB) decomposition on several periodcities at once — multiAirlineDecomposition","title":"Perform an Arima Model Based (AMB) decomposition on several periodcities at once — multiAirlineDecomposition","text":"Perform Arima Model Based (AMB) decomposition several periodcities ","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/multiAirlineDecomposition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform an Arima Model Based (AMB) decomposition on several periodcities at once — multiAirlineDecomposition","text":"","code":"multiAirlineDecomposition(   y,   periods,   ndiff = 2,   ar = FALSE,   stde = FALSE,   nbcasts = 0,   nfcasts = 0,   log = FALSE,   y_time = NULL )"},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/multiAirlineDecomposition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform an Arima Model Based (AMB) decomposition on several periodcities at once — multiAirlineDecomposition","text":"y input time series. periods vector periods values seasonal component, positive real numbers. stde Boolean: TRUE: compute standard deviations components. cases (memory limits), currently possible compute nbcasts number backcasts. nfcasts number forecasts. y_time vector times `y` indexed adjust Boolean: TRUE: actual fractional airline model used, FALSE: period rounded nearest integer. sn decomposition signal noise (2 components ). signal seasonally adjusted series noise seasonal component.","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/multiAirlineDecomposition_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — multiAirlineDecomposition_raw","title":"Title — multiAirlineDecomposition_raw","text":"Title","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/multiAirlineDecomposition_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — multiAirlineDecomposition_raw","text":"","code":"multiAirlineDecomposition_raw(   y,   periods,   ndiff = 2,   ar = FALSE,   stde = FALSE,   nbcasts = 0,   nfcasts = 0 )"},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/multiAirlineDecomposition_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — multiAirlineDecomposition_raw","text":"nfcasts","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/multiAirlineDecomposition_ssf.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — multiAirlineDecomposition_ssf","title":"Title — multiAirlineDecomposition_ssf","text":"Title","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/multiAirlineDecomposition_ssf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — multiAirlineDecomposition_ssf","text":"","code":"multiAirlineDecomposition_ssf(jdecomp)"},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/multiAirlineDecomposition_ssf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — multiAirlineDecomposition_ssf","text":"jdecomp","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/plot.JDFractionalAirlineDecomposition.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Function for JDFractionalAirlineDecomposition Objects — plot.JDFractionalAirlineDecomposition","title":"Plot Function for JDFractionalAirlineDecomposition Objects — plot.JDFractionalAirlineDecomposition","text":"function creates plot result Arima Model Based (AMB) decomposition one several frequencies (class `JDFractionalAirlineDecomposition`). shows decomposition component model.","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/plot.JDFractionalAirlineDecomposition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Function for JDFractionalAirlineDecomposition Objects — plot.JDFractionalAirlineDecomposition","text":"","code":"# S3 method for class 'JDFractionalAirlineDecomposition' plot(x, from, to, type_chart = c(\"y-sa-trend\", \"cal-seas-irr\"), ...)"},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/plot.JDFractionalAirlineDecomposition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Function for JDFractionalAirlineDecomposition Objects — plot.JDFractionalAirlineDecomposition","text":"x object class 'JDFractionalAirlineDecomposition'. `Date` `POSIXt` object, optional starting point x-axis. `Date` `POSIXt` object, optional ending point x-axis. type_chart Character vector specifying type chart plot (\"y-sa-trend\", \"cal-seas-irr\"). ... Additional graphical parameters.","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/plot.JDFractionalAirlineDecomposition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Function for JDFractionalAirlineDecomposition Objects — plot.JDFractionalAirlineDecomposition","text":"`NULL` (invisible).","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/plot.JDFractionalAirlineEstimation.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Function for JDFractionalAirlineEstimation Objects — plot.JDFractionalAirlineEstimation","title":"Plot Function for JDFractionalAirlineEstimation Objects — plot.JDFractionalAirlineEstimation","text":"function creates plot result fractional airline model (class `JDFractionalAirlineEstimation`). shows raw data linearized series.","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/plot.JDFractionalAirlineEstimation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Function for JDFractionalAirlineEstimation Objects — plot.JDFractionalAirlineEstimation","text":"","code":"# S3 method for class 'JDFractionalAirlineEstimation' plot(x, from, to, ...)"},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/plot.JDFractionalAirlineEstimation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Function for JDFractionalAirlineEstimation Objects — plot.JDFractionalAirlineEstimation","text":"x object class 'JDFractionalAirlineEstimation'. `Date` `POSIXt` object, optional starting point x-axis. `Date` `POSIXt` object, optional ending point x-axis. ... Additional graphical parameters.","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/plot.JDFractionalAirlineEstimation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Function for JDFractionalAirlineEstimation Objects — plot.JDFractionalAirlineEstimation","text":"`NULL` (invisible).","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/print.JDFractionalAirlineDecomposition.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for 'JDFractionalAirlineDecomposition' objects — print.JDFractionalAirlineDecomposition","title":"Print method for 'JDFractionalAirlineDecomposition' objects — print.JDFractionalAirlineDecomposition","text":"function prints informations result Fractional Airline model (classe JDFractionalAirlineDecomposition).","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/print.JDFractionalAirlineDecomposition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for 'JDFractionalAirlineDecomposition' objects — print.JDFractionalAirlineDecomposition","text":"","code":"# S3 method for class 'JDFractionalAirlineDecomposition' print(x, digits = max(3L, getOption(\"digits\") - 3L), ...)"},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/print.JDFractionalAirlineDecomposition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for 'JDFractionalAirlineDecomposition' objects — print.JDFractionalAirlineDecomposition","text":"x object class 'JDFractionalAirlineDecomposition'. digits Number digits round numerical values (default 3 digits - 3 options).","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/print.JDFractionalAirlineDecomposition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for 'JDFractionalAirlineDecomposition' objects — print.JDFractionalAirlineDecomposition","text":"original object 'x'.","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/print.JDFractionalAirlineEstimation.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for 'JDFractionalAirlineEstimation' objects — print.JDFractionalAirlineEstimation","title":"Print method for 'JDFractionalAirlineEstimation' objects — print.JDFractionalAirlineEstimation","text":"function prints informations result Fractional Airline model (classe JDFractionalAirlineEstimation).","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/print.JDFractionalAirlineEstimation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for 'JDFractionalAirlineEstimation' objects — print.JDFractionalAirlineEstimation","text":"","code":"# S3 method for class 'JDFractionalAirlineEstimation' print(x, digits = max(3L, getOption(\"digits\") - 3L), ...)"},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/print.JDFractionalAirlineEstimation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for 'JDFractionalAirlineEstimation' objects — print.JDFractionalAirlineEstimation","text":"x object class 'JDFractionalAirlineEstimation'. digits Number digits round numerical values (default 3 digits - 3 options).","code":""},{"path":"https://rjdverse.github.io/rjd3highfreq/reference/print.JDFractionalAirlineEstimation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for 'JDFractionalAirlineEstimation' objects — print.JDFractionalAirlineEstimation","text":"original object 'x'.","code":""}]
